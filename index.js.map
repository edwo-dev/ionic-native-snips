{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/snips/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;AACxE,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA2CP,yBAAiB;;;;IAE1C;;;OAGG;;;;;IAIH,qBAAK;;;;;QACH,MAAM,CAAC;KACR;IAED;;OAEG;;;;IAEH,oBAAI;;;;QACF,MAAM,CAAC;KACR;IAED;;OAEG;;;;IAEH,qBAAK;;;;QACH,MAAM,CAAC;KACR;IAED;;OAEG;;;;IAEH,sBAAM;;;;QACJ,MAAM,CAAC;KACR;;gBApCF,UAAU;;;QAOR,OAAO,CAAC;YACP,UAAU,EAAE,IAAI;SACjB,CAAC;;;wCACO,UAAU;sCAElB;;QAKA,OAAO,EAAE;;;;qCAGT;;QAKA,OAAO,EAAE;;;;sCAGT;;QAKA,OAAO,EAAE;;;;uCAGT;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAnCU,KAAK;QAVjB,MAAM,CAAC;YACN,UAAU,EAAE,OAAO;YACnB,MAAM,EAAE,sBAAsB;;YAC9B,SAAS,EAAE,uBAAuB;;YAClC,IAAI,EAAE,gEAAgE;;YACtE,OAAO,EAAE,EAAE;;YACX,gBAAgB,EAAE,EAAE;;YACpB,SAAS,EAAE,CAAC,KAAK,CAAC;SACnB,CAAC;OAEW,KAAK,EAqCjB;gBAlFD;EA6C2B,iBAAiB;SAA/B,KAAK","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\n\nexport interface SnipsResponse {\n  hotword: boolean;\n}\n\n/**\n * @name Snips\n * @description\n * This plugin does something\n *\n * @usage\n * ```typescript\n * import { Snips } from '@ionic-native/snips';\n *\n *\n * constructor(private snips: Snips) { }\n *\n * ...\n *\n * let config: DialogflowConfiguration;\n * this.dialogflow.init(config)\n *   .then(() => console.log('Initialized'))\n *   .catch((error: any) => console.error(error));\n *\n * ```\n *\n * @interfaces\n * DetectIntentResponse\n *\n * @interfaces\n * StreamingDetectIntentResponse\n */\n@Plugin({\n  pluginName: 'Snips',\n  plugin: 'cordova-plugin-snips', // npm package name, example: cordova-plugin-camera\n  pluginRef: 'cordova.plugins.Snips', // the variable reference to call the plugin, example: navigator.geolocation\n  repo: 'https://betacut@bitbucket.org/betacut/cordova-plugin-snips.git', // the github repository URL for the plugin\n  install: '', // OPTIONAL install command, in case the plugin requires variables\n  installVariables: [], // OPTIONAL the plugin requires variables\n  platforms: ['iOS'] // Array of platforms supported, example: ['Android', 'iOS']\n})\n@Injectable()\nexport class Snips extends IonicNativePlugin {\n\n  /**\n   * Starts listening to microphone input.\n   * @return {Observable<StreamingDetectIntentResponse>} Returns a observable containing streaming detect intent response.\n   */\n  @Cordova({\n    observable: true\n  })\n  start(): Observable<SnipsResponse> {\n    return;\n  }\n\n  /**\n   * Stops listening to microphone input.\n   */\n  @Cordova()\n  stop(): void {\n    return;\n  }\n\n  /**\n   * Pauses listening to microphone input.\n   */\n  @Cordova()\n  pause(): void {\n    return;\n  }\n\n  /**\n   * Resumes listening to microphone input.\n   */\n  @Cordova()\n  resume(): void {\n    return;\n  }\n\n}\n"]}